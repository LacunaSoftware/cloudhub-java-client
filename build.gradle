apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'com.lacunasoftware.cloudhub'
version = '1.0.2'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

java {
    withJavadocJar()
    withSourcesJar()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.+'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.11.0'
    }
}


repositories {
    mavenCentral()
}
sourceSets {
    main.java.srcDirs = ['src/main/java']
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifactId = 'cloudhub-client'
            groupId group
            version version

            // Set the POM properties
            pom {
                name = "Cloudhub Java Client"
                description = "Java client library for consumption of the Cloudhub API"
                url = 'https://cloudhub.lacunasoftware.com/'
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                scm {
                    url = 'https://github.com/LacunaSoftware/cloudhub-java-client'
                    connection = 'scm:git@https://github.com/LacunaSoftware/cloudhub-java-client.git'
                    developerConnection = 'scm:git@https://github.com/LacunaSoftware/cloudhub-java-client.git'
                }  
                developers {
                    developer {
                        id = "DaniloB"
                        name = "Danilo Bispo"
                        email = "danilob@lacunasoftware.com"
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

task execute(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'package.Main'
}

ext {
    jakarta_annotation_version = "1.3.5"
}


dependencies {
    implementation 'io.swagger:swagger-annotations:1.6.8'
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'io.gsonfire:gson-fire:1.8.5'
    implementation 'javax.ws.rs:jsr311-api:1.1.1'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation "jakarta.annotation:jakarta.annotation-api:$jakarta_annotation_version"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

javadoc {
    options.tags = [ "http.response.details:a:Http Response Details" ]
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }

}


signing {
    sign publishing.publications.mavenJava
    sign configurations.archives
}